[user]
    name = Roma Sokolov
    email = sokolov.r.v@gmail.com
[includeIf "gitdir:~/prj/w/"]
    path = .gitconfig-work
[alias]
    ci = commit
    st = status -s
    sst = status
    br = branch
    co = checkout
    up = pull --rebase
    put = push origin HEAD
    myput = push little-arhat HEAD
    df = diff --color=always
    wdf = diff --word-diff --color=always
    flog = log --perl-regexp --author='^((?!teamcity).*)$'
    lg = log -p --color
    ulg = log -p --color
    latest = log -n5 -r
    glog = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative --perl-regexp --author='^((?!teamcity).*)$'
    uglog = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
    lc = log ORIG_HEAD.. --stat --no-merges
    addremove = !git add .; git ls-files --deleted xargs git rm
    changes = diff --name-status -r
    diffstat = diff --stat -r
    prune-all = !git remote | xargs -n 1 git remote prune
    edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; $EDITOR `f`"
    add-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
    subump = submodule update --recursive --init
    conflicts = diff --name-only --diff-filter=U
    stup = !git stash && git up && git stash pop
    change-commits = "!f() { VAR=$1; OLD=$2; NEW=$3; shift 3; git filter-branch --env-filter \"if [[ \\\"$`echo $VAR`\\\" = '$OLD' ]]; then export $VAR='$NEW'; fi\" $@; }; f "
    mylog = log --author='Roma Sokolov'
    myshort = shortlog --author='Roma Sokolov'
    dft = !GIT_EXTERNAL_DIFF=difft git diff
    lgt = !GIT_EXTERNAL_DIFF=difft git log -p --ext-diff
[diff]
    algorithm = histogram
    ignoreSubmodules = dirty
    colorMoved = default
    wordRegex = [_[:alnum:]]+
[merge]
    conflictstyle = diff3
[init]
    defaultBranch = master
[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
[hub]
    protocol = https
[http]
    sslverify = false
